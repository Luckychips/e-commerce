scalar Date

type Brand {
    id: ID
    brandId: String
    name: String
    image: String
}

input BrandInput {
    brandId: String!
    name: String!
    image: String!
}

type Product {
    id: ID
    name: String
    content: String
    price: Int
    discountRate: Int
    reviewScore: Int
    reviewCount: Int
    qnaCount: Int
    brand: Brand
}

input ProductInput {
    name: String!
    content: String!
    price: Int!
    discountRate: Int!
}

type Query {
    greeting: String!
    getBrandList: [Brand]
    getBrand(id: String!): Brand
    getBrandFromBrandId(brandId: String!): Brand
    getBrandFromBrandName(brandName: String!): [Brand]
    getProduct(id: String!): Product
}

type Mutation {
    addBrand(brand: BrandInput!): Brand!
    addProduct(product: ProductInput!): Product!
}
